buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:3.1.2'
    }
}

apply plugin: 'war'
apply plugin: 'org.owasp.dependencycheck'

sourceCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
    providedCompile group:'javax.websocket', name:'javax.websocket-api', version:'1.1'
    providedCompile group:'javax.ws.rs', name:'javax.ws.rs-api', version:'2.0'
    providedCompile group:'javax.json', name:'javax.json-api', version:'1.0'
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    providedCompile 'javax.annotation:javax.annotation-api:1.2'
    providedCompile 'javax.inject:javax.inject:1'
    providedCompile 'javax.enterprise.concurrent:javax.enterprise.concurrent-api:1.0'
    providedCompile 'javax.enterprise:cdi-api:1.2'
    providedCompile 'io.swagger:swagger-annotations:1.5.0'
}

dependencyCheck {

    // let's ignore errors to make builds in Jenkins more stable
    failOnError = false

    // OWASP Dependency Check plugin for Jenkins needs an XML report,
    // but humans may also need an HTML one
    format = 'ALL'

    // set up a quality gate for vulnerabilities with high severity level:
    //   let's consider that a vulnerability has a high severity level if its CVSS score is higher than 7
    //   the build is going to fail if vulnerabilities with high severity level found
    failBuildOnCVSS = 7

    // specify a list of known issues which contain:
    //   false-positives
    //   confirmed vulnerabilities which are not fixed yet, but we have a ticket for that
    suppressionFile = 'dependency-check-known-issues.xml'
}